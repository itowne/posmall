<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-3.0.xsd  
    http://www.springframework.org/schema/tx  
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/cache 
    http://www.springframework.org/schema/cache/spring-cache-3.1.xsd"
	default-lazy-init="false" default-autowire="byName">
	
	<import resource="classpath:database.xml" />
	<context:component-scan base-package="com.newland,org.ohuyo.rapid">
		<context:exclude-filter expression="org.springframework.stereotype.Controller"
			type="annotation" />
	</context:component-scan>
	<bean id="scheduleEveryHost"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="triggers.pdtcollection"/>
				<ref bean="triggers.custpdtcollection"/>
				<ref bean="triggers.logisticsync"/>
				<ref bean="triggers.logisticsync2"/>
				<ref bean="triggers.logisticsync3"/>
				<ref bean="triggers.logisticsync4"/>
				<ref bean="triggers.messagequota"/>
				<ref bean="triggers.agmtInvalidate"/>
				<ref bean="triggers.custStockFeeCount"/>
				<ref bean="triggers.maintenanceinfosync"/>
			</list>
		</property>
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
		<property name="overwriteExistingJobs" value="true" />
	</bean>
	<!-- 产品库存量归集定时器 -->
	<bean id="triggers.pdtcollection" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject">
					<ref bean="pdtStockCollectionTask"/>
				</property>
				<property name="targetMethod">
					<value>runTask</value>
				</property>
			</bean> 
		</property>
		<property name="cronExpression">
			<!-- 每天00:00:10执行 -->
			<value>10 0 0 * * ? *</value>
		</property>
	</bean>
	<!-- 客户产品库存量归集定时器 -->
	<bean id="triggers.custpdtcollection" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject">
					<ref bean="custPdtStockCollectionTask"/>
				</property>
				<property name="targetMethod">
					<value>runTask</value>
				</property>
			</bean> 
		</property>
		<property name="cronExpression">
			<!-- 每天23:00:10执行 -->
			<value>10 0 23 * * ? *</value>
		</property>
	</bean>
	<!-- 客户产品物流归集定时器 -->
	<bean id="triggers.logisticsync" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject">
					<ref bean="logisticSyncTask"/>
				</property>
				<property name="targetMethod">
					<value>runTask</value>
				</property>
			</bean> 
		</property>
		<property name="cronExpression">
			<!-- 每天1:30:10执行 -->
			<value>10 30 1 * * ? *</value>
		</property>
	</bean>
	<!-- 客户产品物流归集定时器 -->
	<bean id="triggers.logisticsync2" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject">
					<ref bean="logisticSyncTask"/>
				</property>
				<property name="targetMethod">
					<value>runTask</value>
				</property>
			</bean> 
		</property>
		<property name="cronExpression">
			<!-- 每天9:15:10执行 -->
			<value>10 15 9 * * ? *</value>
		</property>
	</bean>
	<!-- 客户产品物流归集定时器 -->
	<bean id="triggers.logisticsync3" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject">
					<ref bean="logisticSyncTask"/>
				</property>
				<property name="targetMethod">
					<value>runTask</value>
				</property>
			</bean> 
		</property>
		<property name="cronExpression">
			<!-- 每天11:30:10执行 -->
			<value>10 30 11 * * ? *</value>
		</property>
	</bean>
		<!-- 客户产品物流归集定时器 -->
	<bean id="triggers.logisticsync4" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject">
					<ref bean="logisticSyncTask"/>
				</property>
				<property name="targetMethod">
					<value>runTask</value>
				</property>
			</bean> 
		</property>
		<property name="cronExpression">
			<!-- 每天13:30:10执行 -->
			<value>10 30 13 * * ? *</value>
		</property>
	</bean>
	<!-- 维保信息同步插入定时器 -->
	<bean id="triggers.maintenanceinfosync" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject">
					<ref bean="maintenanceInfoSyncTask"/>
				</property>
				<property name="targetMethod">
					<value>runTask</value>
				</property>
			</bean> 
		</property>
		<property name="cronExpression">
			<!-- 每天1:50:10执行 -->
			<value>10 50 1 * * ? *</value>
		</property>
	</bean>
	<!-- 消息重发定时器 -->
	<bean id="triggers.messagequota" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject">
					<ref bean="messageQueueRefreshTask"/>
				</property>
				<property name="targetMethod">
					<value>runTask</value>
				</property>
			</bean> 
		</property>
		<property name="cronExpression">
			<!-- 每小时执行 -->
			<value>0 0 */1 * * ? *</value>
		</property>
	</bean>
	<!-- 协议过期定时器 -->
	<bean id="triggers.agmtInvalidate" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject">
					<ref bean="agmtInvildateTask"/>
				</property>
				<property name="targetMethod">
					<value>runTask</value>
				</property>
			</bean> 
		</property>
		<property name="cronExpression">
			<!-- 每天00:20:00执行 -->
			<value>0 20 0 * * ? *</value>
		</property>
	</bean>
	
	<!-- 客户库存管理费用计费 -->
	<bean id="triggers.custStockFeeCount" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject">
					<ref bean="custStockFeeCountTask"/>
				</property>
				<property name="targetMethod">
					<value>runTask</value>
				</property>
			</bean> 
		</property>
		<property name="cronExpression">
			<!-- 每天23:45:00执行 -->
			<value>0 45 23 * * ? *</value>
		</property>
	</bean>
	
	<!-- 缓存设置 -->
	<cache:annotation-driven cache-manager="posmall.cacheManager" />
	<bean id="posmall.cacheManagerFactory"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
		p:configLocation="classpath:/ehcache.xml" />
	<bean id="posmall.cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"
		p:cacheManager-ref="posmall.cacheManagerFactory" />
		
</beans>